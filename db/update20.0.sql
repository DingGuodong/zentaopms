DELETE FROM `zt_block` WHERE `type` IN ('news', 'patch', 'plugin', 'puglicclass');

ALTER TABLE `zt_block` ADD `dashboard` varchar(20) NOT NULL DEFAULT '' AFTER `account`;
ALTER TABLE `zt_block` CHANGE `block` `code` varchar(30) NOT NULL DEFAULT '' AFTER `module`;
ALTER TABLE `zt_block` ADD `width` enum ('1', '2', '3') NOT NULL DEFAULT '1' AFTER `code`;
ALTER TABLE `zt_block` MODIFY `height` smallint(5) UNSIGNED NOT NULL DEFAULT 3 AFTER `width`;
ALTER TABLE `zt_block` ADD `left` enum('0', '1', '2') NOT NULL DEFAULT '0' AFTER `height`;
ALTER TABLE `zt_block` ADD `top` smallint(5) UNSIGNED NOT NULL DEFAULT 0 AFTER `left`;
ALTER TABLE `zt_block` MODIFY `vision` varchar(10) NOT NULL DEFAULT 'rnd' AFTER `hidden`;

UPDATE `zt_block` SET `dashboard` = CONCAT(`module`, `type`);
UPDATE `zt_block` SET `module` = IF(`source` != '', `source`, `code`);
DROP INDEX account_vision_module_type_order ON `zt_block`;

ALTER TABLE `zt_block` DROP COLUMN `source`;
ALTER TABLE `zt_block` DROP COLUMN `type`;
ALTER TABLE `zt_block` DROP COLUMN `grid`;
ALTER TABLE `zt_block` DROP COLUMN `order`;

ALTER TABLE `zt_todo`  CHANGE `idvalue` `objectID` mediumint(8) unsigned default '0' NOT NULL AFTER `type`;
ALTER TABLE `zt_todo` CHANGE `config` `config` VARCHAR(1000) NOT NULL  DEFAULT '';

ALTER TABLE `zt_project` ADD `stageBy` enum('project', 'product') NOT NULL DEFAULT 'product' AFTER `division`;
UPDATE `zt_project` SET `stageBy` = 'project' WHERE `division` = '0';
UPDATE `zt_project` SET `stageBy` = 'product' WHERE `division` = '1';
ALTER TABLE `zt_project` DROP `division`;

ALTER TABLE `zt_bug` CHANGE `linkBug` `relatedBug` varchar(255) NOT NULL DEFAULT '';

ALTER TABLE `zt_product` ADD COLUMN `groups` text NULL AFTER `acl`;

ALTER TABLE `zt_usercontact` ADD `public` tinyint(1) NOT NULL DEFAULT 0;
UPDATE `zt_usercontact` AS t1, `zt_config` AS t2 SET t1.public = 1 WHERE t2.module = 'my' AND t2.section = 'global' AND t2.key = 'globalContacts' AND FIND_IN_SET(t1.id, t2.value); -- Change it for compatible with dameng.
DELETE FROM `zt_config` WHERE `module` = 'my' AND `section` = 'global' AND `key` = 'globalContacts';

ALTER TABLE `zt_testtask` ADD `realBegan` date NULL;

UPDATE `zt_config` SET `module` = 'bug', `section` = 'browse' WHERE `module` = 'datatable' AND `section` = 'bugBrowse' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'caselib', `section` = 'browse' WHERE `module` = 'datatable' AND `section` = 'caselibBrowse' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'execution', `section` = 'bug' WHERE `module` = 'datatable' AND `section` = 'executionBug' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'execution', `section` = 'story' WHERE `module` = 'datatable' AND `section` = 'executionStory' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'execution', `section` = 'task' WHERE `module` = 'datatable' AND `section` = 'executionTask' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'feedback', `section` = 'admin' WHERE `module` = 'datatable' AND `section` = 'feedbackAdmin' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'product', `section` = 'browse' WHERE `module` = 'datatable' AND `section` = 'productBrowse' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'project', `section` = 'bug' WHERE `module` = 'datatable' AND `section` = 'projectBug' AND `key` = 'showModule';
UPDATE `zt_config` SET `module` = 'testcase', `section` = 'browse' WHERE `module` = 'datatable' AND `section` = 'testcaseBrowse' AND `key` = 'showModule';

-- DROP TABLE IF EXISTS `zt_space`;
CREATE TABLE `zt_space` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL,
  `k8space` char(64) NOT NULL,
  `owner` char(30) NOT NULL,
  `default` tinyint(1) NOT NULL DEFAULT 0,
  `createdAt` datetime NOT NULL,
  `deleted` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- DROP TABLE IF EXISTS `zt_instance`;
CREATE TABLE IF NOT EXISTS `zt_instance` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `space` mediumint(8) unsigned NOT NULL DEFAULT 0,
  `solution` mediumint(8) unsigned NOT NULL DEFAULT 0,
  `name` char(50) DEFAULT '',
  `appID` mediumint(8) unsigned NOT NULL DEFAULT 0,
  `appName` char(50) NOT NULL DEFAULT '',
  `appVersion` char(20) NOT NULL DEFAULT '',
  `chart` char(50) NOT NULL DEFAULT '',
  `logo` varchar(255) DEFAULT '',
  `version` char(50) NOT NULL DEFAULT '',
  `desc` text,
  `introduction` varchar(500) DEFAULT '',
  `source` char(20) NOT NULL DEFAULT '',
  `channel` char(20) DEFAULT '',
  `k8name` char(64) NOT NULL DEFAULT '',
  `status` char(20) NOT NULL DEFAULT '',
  `pinned` enum('0', '1') NOT NULL DEFAULT '0',
  `domain` char(255) NOT NULL DEFAULT '',
  `smtpSnippetName` char(30) NULL DEFAULT '',
  `ldapSnippetName` char(30) NULL DEFAULT '',
  `ldapSettings` text,
  `dbSettings` text,
  `autoBackup` tinyint(1) NOT NULL DEFAULT 0,
  `backupKeepDays` int unsigned NOT NULL DEFAULT 1,
  `autoRestore` tinyint(1) NOT NULL DEFAULT 0,
  `env` text,
  `createdBy` char(30) NOT NULL DEFAULT '',
  `createdAt` datetime NOT NULL,
  `deleted` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  KEY `space` (`space`),
  KEY `k8name` (`k8name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- DROP TABLE IF EXISTS `zt_solution`;
CREATE TABLE IF NOT EXISTS `zt_solution` (
  `id` mediumint(8) unsigned NOT NULL AUTO_INCREMENT,
  `name` char(50),
  `appID` mediumint(8) unsigned NOT NULL,
  `appName` char(50) NOT NULL,
  `appVersion` char(20) NOT NULL,
  `version` char(50) NOT NULL,
  `chart` char(50) NOT NULL,
  `cover` varchar(255),
  `desc` text,
  `introduction` varchar(500),
  `source` char(20) NOT NULL,
  `channel` char(20),
  `components` text,
  `status` char(20) NOT NULL,
  `deleted` tinyint(1) NOT NULL DEFAULT 0,
  `createdBy` char(30) NOT NULL,
  `createdAt` datetime NOT NULL,
  `updatedDate` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `zt_session` (
    `id` varchar(32) NOT NULL,
    `data` mediumtext,
    `timestamp` int(10) unsigned DEFAULT NULL,
    PRIMARY KEY (`id`),
    KEY `timestamp` (`timestamp`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `zt_metric` (
  `id` mediumint unsigned NOT NULL AUTO_INCREMENT,
  `purpose` varchar(50) NOT NULL DEFAULT '',
  `scope` char(30) NOT NULL DEFAULT '',
  `object` char(30) NOT NULL DEFAULT '',
  `name` varchar(90) NOT NULL DEFAULT '',
  `code` varchar(90) NOT NULL DEFAULT '',
  `unit` varchar(10) NOT NULL DEFAULT '',
  `desc` text,
  `definition` text,
  `when` varchar(30) NOT NULL DEFAULT '',
  `event` varchar(30) NOT NULL DEFAULT '',
  `cronCFG` varchar(30) NOT NULL DEFAULT '',
  `time` varchar(30) NOT NULL DEFAULT '',
  `createdBy` varchar(30) NOT NULL DEFAULT '',
  `createdDate` datetime DEFAULT NULL,
  `editedBy` varchar(30) NOT NULL DEFAULT '',
  `editedDate` datetime DEFAULT NULL,
  `order` mediumint unsigned NOT NULL DEFAULT '0',
  `deleted` enum('0','1') NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'productplan', '按产品统计的计划总数', 'count_of_plan_in_product', '个', '产品的计划总数，反映产品活跃程度以及产品经理对产品开发节奏的把握。', '产品中计划的个数求和\n过滤已删除的计划\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'productplan', '按产品统计的年度新增计划数', 'count_of_annual_created_plan_in_product', '个', '产品年度新增的计划数，反映产品年度活跃情况。', '产品中创建时间为某年的计划个数求和\n过滤已删除的计划\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'productplan', '按产品统计的年度完成计划数', 'count_of_annual_finished_plan_in_product', '个', '产品年新增完成计划数', '产品中完成时间为某年的计划个数求和\n过滤已删除的计划\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'release', '按产品统计的发布总数', 'count_of_release_in_product', '个', '产品的发布总数', '产品中发布的个数求和\n过滤已删除的发布\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'release', '按产品统计的年度新增发布数', 'count_of_annual_created_release_in_product', '个', '产品年新增发布数', '产品中发布时间为某年的发布个数求和\n过滤已删除的发布\n过滤已删除的产品\n过滤无效时间', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('qc', 'product', 'release', '按产品统计的发布上线后的Bug数', 'count_of_released_bug_in_product', '个', '产品发布上线后产生的与本次发布相关的Bug数', '产品中Bug创建时间为某个发布上线后且关联到这个发布版本的Bug个数求和\n过滤已删除的计划\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的研发需求总数', 'count_of_story_in_product', '个', '产品的研发需求总数', '产品中研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的已完成研发需求数', 'count_of_finished_story_in_product', '个', '产品的所处阶段为已关闭且关闭原因为已完成的研发需求数', '产品中所处阶段为已关闭且关闭原因为已完成的研发需求个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的已关闭研发需求数', 'count_of_closed_story_in_product', '个', '产品的已关闭的研发需求数', '产品中阶段为已关闭研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的未关闭研发需求数', 'count_of_unclosed_story_in_product', '个', '产品的研发需求总数与已关闭研发需求个数的差值', '复用：\n按产品统计的研发需求总数\n按产品统计的已关闭研发需求数\n按产品统计的关闭研发需求总数=按产品统计的研发需求总数-按产品统计的已关闭研发需求数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的已交付研发需求数', 'count_of_delivered_story_in_product', '个', '产品的所处阶段为已发布或关闭原因为已完成的研发需求数', '产品中所处阶段为已发布或关闭原因为已完成的研发需求个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的无效研发需求数', 'count_of_invalid_story_in_product', '个', '产品的关闭原因为重复、不做、设计如此和已取消的研发需求数', '产品中关闭原因为重复、不做、设计如此和已取消的研发需求个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的有效研发需求数', 'count_of_valid_story_in_product', '个', '按产品统计的有效研发需求数是指在在产品中被确认为有效的研发需求数量。有效需求指的是符合产品策略和目标，可以实施并且对用户有价值的需求。通过对有效需求的统计，可以帮助团队评估产品需求的质量和重要性，并进行优先级排序和资源分配。较高的有效需求数量通常表示产品的功能和特性满足了用户和市场的期望，有利于实现产品的成功交付和用户满意度。', '', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的研发完成的研发需求数', 'count_of_developed_story_in_product', '个', '产品的所处阶段为研发完毕、测试中、测试完毕、已验收、已发布和关闭原因为已完成的研发需求数', '产品中所处阶段为研发完毕、测试中、测试完毕、已验收、已发布和关闭原因为已完成的研发需求个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的已立项研发需求的用例覆盖率', 'testcase_coverage_of_projected_story_in_product', '个', '产品的有用例的研发需求相对于研发需求总数的比例', '复用：\n按产品统计的研发需求总数\n公式：\n按产品统计的研发需求用例覆盖率=按产品统计的的有用例研发需求数/按产品统计的研发需求总数\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度新增研发需求数', 'count_of_annual_created_story_in_product', '个', '产品年度新增研发需求数', '产品中创建时间为某年的研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度完成研发需求数', 'count_of_annual_finished_story_in_product', '个', '产品年度关闭的且关闭原因为已完成的研发需求数', '产品中关闭时间在某年且关闭原因为已完成的研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度交付研发需求数', 'count_of_annual_delivered_story_in_product', '个', '产品年度发布或完成的研发需求数', '产品中所处阶段为已发布且发布时间为某年或关闭原因为已完成且关闭时间为某年的研发需求个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度关闭研发需求数', 'count_of_annual_closed_story_in_product', '个', '产品年度关闭的研发需求数', '产品中关闭时间在某年的研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的月度完成研发需求数', 'count_of_monthly_finished_story_in_product', '个', '产品月度关闭的且关闭原因为已完成的研发需求总数', '产品中关闭时间为某年某月且关闭原因为已完成的研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的月度交付研发需求数', 'count_of_monthly_delivered_story_in_product', '个', '产品月度发布或完成的研发需求数', '产品中所处阶段为已发布且发布时间为某年某月或关闭原因为已完成且关闭时间为某年某月的研发需求个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的月度关闭研发需求数', 'count_of_monthly_closed_story_in_product', '个', '产品月度关闭的研发需求数', '产品中关闭时间为某年某月的研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'product', 'story', '按产品统计的研发需求完成率', 'rate_of_finish_story_in_product', '%', '产品已完成研发需求数相对于研发需求总数与无效研发需求数差值的比例', '复用：\n按产品统计的已完成研发需求数\n按产品统计的无效研发需求数\n按产品统计的研发需求总数\n公式：\n按产品统计的研发需求完成率=按产品统计的已完成研发需求数/（按产品统计的研发需求总数-按产品统计的无效研发需求数）*100%', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'product', 'story', '按产品统计的研发需求交付率', 'rate_of_delivery_story_in_product', '%', '产品已交付研发需求数相对于研发需求总数与无效研发需求数差值的比例', '复用：\n按产品统计的已交付研发需求数\n按产品统计的无效研发需求数\n按产品统计的研发需求总数\n公式：\n按产品统计的研发需求完成率=按产品统计的已交付研发需求数/（按产品统计的研发需求总数-按产品统计的无效研发需求数）*100%', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的月度新增研发需求数', 'count_of_monthly_created_story_in_product', '个', '产品月度新增研发需求数', '产品中创建时间在某年某月的研发需求的个数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的所有研发需求规模数', 'scale_of_story_in_product', 'sp/工时/功能点', '产品的研发需求规模数', '产品中研发需求的规模数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度已完成研发需求规模数', 'scale_of_annual_finished_story_in_product', 'sp/工时/功能点', '产品年度关闭的且关闭原因为已完成的研发需求规模数', '产品中关闭时间在某年且关闭原因为已完成的研发需求的规模数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度已交付研发需求规模数', 'scale_of_annual_delivered_story_in_product', 'sp/工时', '产品月度发布或完成的研发需求规模数', '产品中所处阶段为已发布且发布时间为某年某月或关闭原因为已完成且关闭时间为某年某月的研发需求规模数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'story', '按产品统计的年度关闭研发需求规模数', 'scale_of_annual_closed_story_in_product', 'sp/工时', '产品年度关闭的研发需求规模数', '产品中关闭时间在某年的研发需求的规模数求和\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('qc', 'product', 'story', '按产品统计的研发需求评审通过率', 'rate_of_approved_story_in_product', '%', '产品中不需要评审的与评审通过的研发需求数相对于不需要评审的与有评审结果的需求数的比例', '按产品统计的所有研发需求评审通过率=（按产品统计的不需要评审的研发需求数+评审结果确认通过的研发需求数）/（按产品统计的不需要评审的研发需求数+有评审结果的研发需求数）\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的研发完成需求的Bug密度', 'bug_concentration_of_developed_story_in_product', '个', '产品中有效的Bug的个数相对于产品中研发完成的研发需求数的比例', '复用：\n按产品统计的有效Bug数\n按产品统计的研发完成的研发需求规模数\n公式：\n按产品统计的研发完成需求的Bug密度=按产品统计的有效Bug数/按产品统计的研发完成的研发需求规模数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'requirement', '按产品统计的用户需求总数', 'count_of_requirement_in_product', '个', '产品的用户需求总数', '产品中用户需求的个数求和\n过滤已删除的用户需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'requirement', '按产品统计的年度新增用户需求数', 'count_of_annual_created_requirement_in_product', '个', '产品年度新增用户需求总数', '产品中创建时间为某年的用户需求的个数求和\n过滤已删除的用户需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'feedback', '按产品统计的反馈总数', 'count_of_feedback_in_product', '个', '产品的反馈总数', '产品中反馈的个数求和\n过滤已删除的反馈\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'feedback', '按产品统计的年度新增反馈数', 'count_of_annual_created_feedback_in_product', '个', '产品年度新增反馈数', '产品中创建时间为某年的反馈的个数求和\n过滤已删除的反馈\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'feedback', '按产品统计的年度关闭反馈数', 'count_of_annual_closed_feedback_in_product', '个', '产品年度关闭反馈数', '产品中关闭时间为某年的反馈的个数求和\n过滤已删除的反馈\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的Bug总数', 'count_of_bug_in_product', '个', '产品的Bug总数', '产品中Bug的个数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的激活Bug数', 'count_of_activated_bug_in_product', '个', '产品的激活Bug总数', '产品中激活Bug的个数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的有效Bug数', 'count_of_effective_bug_in_product', '个', '产品的解决方案为已解决和延期处理的或者状态为激活的Bug数', '有效Bug数=方案为已解决的Bug数+方案为延期处理的Bug数+激活的Bug数\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的已修复Bug数', 'count_of_restored_bug_in_product', '个', '产品的解决方案为已解决的Bug数', '产品中Bug的个数求和\n解决方案为已解决\n状态为已关闭\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的严重程度为1级的Bug数', 'count_of_severity_1_bug_in_product', '个', '产品的严重程度为1级的Bug数', '产品的严重程度为1级的Bug数\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'bug', '按产品统计的严重程度为2级的Bug数', 'count_of_severity_2_bug_in_product', '个', '产品的严重程度为2级的Bug数', '产品的严重程度为2级的Bug数\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的严重程度为1、2级的Bug数', 'count_of_severe_bug_in_product', '个', '产品的严重程度为1、2级的Bug数', '复用：\n按产品统计的严重程度为1级的Bug数\n按产品统计的严重程度为2级的Bug数\n公式：\n按产品统计的严重程度为1、2级的Bug数=按产品统计的严重程度为1级的Bug数+按产品统计的严重程度为2级的Bug数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的年度新增Bug数', 'count_of_annual_created_bug_in_product', '个', '产品年度新增Bug数', '产品中创建时间为某年的Bug的个数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的年度新增有效Bug数', 'count_of_annual_created_effective_bug_in_product', '个', '产品年度新增有效Bug数', '产品中创建时间为某年的解决方案为已解决和延期处理的或者状态为激活的Bug的个数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的年度修复Bug数', 'count_of_annual_restored_bug_in_product', '个', '产品年度修复Bug数', '产品中关闭时间为某年且解决方案为已解决的Bug的个数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的每日新增Bug数', 'count_of_daily_created_bug_in_product', '个', '产品每日新增Bug数', '产品中每日创建的Bug数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的每日解决Bug数', 'count_of_daily_resolved_bug_in_product', '个', '产品每日解决Bug数', '产品中每日解决的Bug数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'Bug', '按产品统计的每日关闭Bug数', 'count_of_daily_closed_bug_in_product', '个', '产品每日关闭Bug数', '产品中每日关闭的Bug数求和\n过滤已删除的Bug\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'product', 'Bug', '按产品统计的Bug修复率', 'rate_of_restored_bug_in_product', '%', '产品中修复的Bug数相对于产品有效Bug数的比例', '复用：\n按产品统计的修复Bug数\n按产品统计的有效Bug数\n公式：\n按产品统计的Bug修复率=按产品统计的修复Bug数/按产品统计的有效Bug数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'testcase', '按产品统计的用例总数', 'count_of_case_in_product', '个', '产品的用例总数', '产品中用例的个数求和\n过滤已删除的用例\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'product', 'testcase', '按产品统计的年度新增用例数', 'count_of_annual_created_case_in_product', '个', '产品年度新增用例数', '产品中创建时间为某年的用例的个数求和\n过滤已删除的用例\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的所有层级的项目集总数', 'count_of_program', '个', '按全局统计的项目集总数表示在整个组织范围内的项目集数量。此度量项反映了整个组织所管理的项目集数量。可以作为评估组织规模和复杂度的指标。', '所有项目集的个数求和\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的所有层级进行中项目集数', 'count_of_doing_program', '个', '按全局统计的进行中项目集总数表示当前正在进行中的项目集数量。此度量项反映了组织当前正在进行中的项目集数量，可以用于评估组织的项目集管理进展和资源分配情况。', '所有项目集的个数求和\n状态为进行中\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的所有层级已关闭项目集数', 'count_of_closed_program', '个', '按全局统计的已关闭项目集总数表示已关闭的项目集数量。此度量项反映了组织过去一段时间内关闭的项目集数量，可以用于评估组织的项目管理成果。', '所有项目集的个数求和\n状态为已关闭\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的所有层级已挂起项目集数', 'count_of_suspended_program', '个', '按全局统计的已挂起项目集总数表示被暂时中止或搁置的项目集数量。此度量项反映了组织中因为各种原因而被暂时搁置的项目集数量，可以用于评估组织的项目集管理的风险和不确定性。', '所有项目集的个数求和\n状态为已挂起\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的所有层级未开始项目集数', 'count_of_wait_program', '个', '按全局统计的未开始项目集总数表示尚未开始的项目集数量。此度量项反映了组织中尚未开始实施的项目集数量，可以用于评估组织的项目集管理的计划和准备程度以及研发工作的规模。', '所有项目集的个数求和\n状态为未开始\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的一级项目集总数', 'count_of_top_program', '个', '按全局统计的一级项目集总数表示组织中处于一级层级的项目集数量。此度量项反映了组织中一级项目集的数量，可以用于评估组织的项目集管理的结构和层级划分。', '所有一级项目集的个数求和\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的已关闭一级项目集数', 'count_of_closed_top_program', '个', '按全局统计的已关闭一级项目集总数表示已关闭的一级项目集数量。此度量项反映了组织中已关闭的一级项目集数量，可以用于评估组织的项目集管理绩效和成果。', '所有一级项目集的个数求和\n状态为已关闭\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的未关闭一级项目集数', 'count_of_unclosed_top_program', '个', '按全局统计的未关闭一级项目集总数表示未关闭的一级项目集数量。此度量项反映了组织中未关闭的一级项目集数量，可以用于评估组织的项目集管理的进展和挑战。', '复用：\n按全局统计的一级项目集总数\n按全局统计的已关闭一级项目集数\n公式：按全局统计的未关闭一级项目集数=按全局统计的一级项目集总数-按全局统计的已关闭一级项目集数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的年度新增一级项目集数', 'count_of_annual_created_top_program', '个', '按全局统计的年度新增一级项目集数表示每年新建立的一级项目集的数量。此度量项反映了组织每年新开展的重要项目集数量，可以用于评估组织的项目管理的扩张和战略规划情况。', '所有的一级项目集的个数求和\n创建时间为某年\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'program', '按全局统计的年度关闭一级项目集数', 'count_of_annual_closed_top_program', '个', '按全局统计的年度关闭一级项目集数表示每年结束并关闭的一级项目集的数量。此度量项反映了组织每年关闭的一级项目集数量，可以用于评估组织的项目管理的绩效和成果。', '所有的一级项目集的个数求和\n关闭时间为某年\n状态为已关闭\n过滤已删除的项目集', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'line', '按全局统计的产品线总数', 'count_of_line', '个', '按全局统计的产品线总数表示整个组织中的产品线数量。此度量项反映了组织的产品线广度，可以用于评估组织的产品组合策略和业务发展方向。', '所有产品线的个数求和\n过滤已删除的产品线', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'product', '按全局统计的产品总数', 'count_of_product', '个', '按全局统计的产品总数表示整个组织中的产品数量。此度量项反映了组织所提供的产品数量，可以用于评估组织的产品组合的规模和多样性。', '所有产品的个数求和\n过滤已删除的产品\n（过滤影子产品）', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'product', '按全局统计的正常的产品数', 'count_of_normal_product', '个', '按全局统计的正常的产品数表示处于正常状态的产品数量。此度量项反映了组织中处于正常研发和运营状态的产品数量，可以用于评估组织的研发能力和运营能力。', '所有产品的个数求和\n状态为正常\n过滤已删除的产品\n（过滤影子产品）', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'product', '按全局统计的结束的产品数', 'count_of_closed_product', '个', '按全局统计的结束的产品数表示已经停止研发和运营的产品数量。此度量项反映了组织中已经停止研发和运营的产品数量，可以用于评估组织的产品生命周期管理和战略调整。', '所有产品的个数求和\n状态为结束\n过滤已删除的产品\n（过滤影子产品）', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'product', '按全局统计的年度新增产品数', 'count_of_annual_created_product', '个', '按全局统计的年度新增产品数表示每年新增加的产品数量。此度量项反映了组织每年新增加的产品数量，可以用于评估组织的产品创新能力和市场拓展情况。', '所有的产品个数求和\n创建时间为某年\n过滤已删除的产品\n（过滤影子产品）', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'product', '按全局统计的年度结束产品数', 'count_of_annual_closed_product', '个', '按全局统计的年度结束产品数表示每年停止研发和运营的产品数量。此度量项反映了组织每年停止研发和运营的产品数量，可以用于评估组织的产品组合调整和战略转型情况。', '所有的产品个数求和\n关闭时间为某年\n过滤已删除的产品\n（过滤影子产品）', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'productplan', '按全局统计的计划总数', 'count_of_productplan', '个', '按全局统计的计划总数表示整个组织中产品计划的数量。该度量项反映了组织中所有计划的总数，包括正在进行中的计划和已经完成的计划，可以用于评估组织的计划管理情况。', '所有的计划的个数求和\n过滤已删除的计划', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'productplan', '按全局统计的年度新增计划数', 'count_of_annual_created_productplan', '个', '按全局统计的年度新增计划数表示每年新增加的计划数量。该度量项反映了组织在每年新增加的计划数量，可以用于评估组织的计划管理和战略规划情况。', '所有的计划个数求和\n创建时间为某年\n过滤已删除的计划', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'productplan', '按全局统计的年度完成计划数', 'count_of_annual_finished_productplan', '个', '按全局统计的年度完成计划数表示每年完成的计划数量。该度量项反映了组织每年完成的计划数量，可以用于评估组织的计划管理绩效和成果。', '所有的计划个数求和\n完成时间为某年\n过滤已删除的计划', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'productplan', '按全局统计的年度关闭计划数', 'count_of_annual_closed_productplan', '个', '按全局统计的年度关闭计划数表示每年关闭的计划数量。该度量项反映了组织每年关闭的计划数量，可以用于评估组织的计划管理效能和调整情况。', '所有的计划个数求和\n关闭时间为某年\n过滤已删除的计划', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'productplan', '按全局统计的已完成计划数', 'count_of_finished_productplan', '个', '按全局统计的已完成计划数表示已经完成的计划数量。该度量项反映了组织中已经完成的计划数量，可以用于评估组织的计划执行能力和绩效。', '所有计划的个数求和\n状态为已完成\n过滤已删除的计划', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'productplan', '按全局统计的未完成计划数', 'count_of_unfinished_productplan', '个', '按全局统计的未完成计划数表示未完成的计划数量。该度量项反映了组织中未完成的计划数量，可以用于评估组织的计划执行进展和挑战。', '复用：\n按全局统计的已完成计划数\n按全局统计的计划总数\n公式：\n按全局统计的未完成计划数=按全局统计的计划总数-按全局统计的已完成计划数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'release', '按全局统计的发布总数', 'count_of_release', '个', '按全局统计的发布总数表示整个组织的总发布数量。该度量项反映了组织总共发布的产品或服务的数量，可以用于评估组织的产品发布活动和战略。', '所有的发布个数求和\n过滤已删除的发布', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'release', '按全局统计的里程碑发布总数', 'count_of_marker_release', '个', '按全局统计的里程碑发布总数表示在发布中的重要里程碑的数量。该度量项反映了组织在发布中所设定的重要里程碑的数量，可以用于评估组织在产品发布过程中的进展和跟踪。', '所有的里程碑发布个数求和\n过滤已删除的发布', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'release', '按全局统计的年度新增发布数', 'count_of_annual_created_release', '个', '按全局统计的年度新增发布数表示每年新增加的发布数量。该度量项反映了组织每年增加的发布数量，可以用于评估组织产品发布的速度和规模。', '所有的发布个数求和\n发布时间为某年\n过滤已删除的发布', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'release', '按全局统计的月度新增发布数', 'count_of_monthly_created_release', '个', '按全局统计的月度新增发布数表示每月新增加的发布数量。该度量项反映了组织每月增加的发布数量，可以用于评估组织产品发布的周期和频率。', '所有的发布个数求和\n发布时间为某年某月\n过滤已删除的发布', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的研发需求总数', 'count_of_story', '个', '按全局统计的研发需求总数表示组织中的研发需求的总数。该度量项反映了组织中所有研发需求的数量，可以用于评估组织的研发活动和需求管理能力。', '所有的研发需求个数求和\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的已关闭研发需求数', 'count_of_closed_story', '个', '按全局统计的已关闭研发需求数表示已经关闭的研发需求的数量。该度量项反映了组织中已经关闭的研发需求的数量，可以用于评估组织的研发需求管理绩效和成果。', '所有的研发需求个数求和\n状态为已关闭\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的已完成研发需求数', 'count_of_finished_story', '个', '按全局统计的已完成研发需求数表示已经完成的研发需求的数量。该度量项反映了组织中已经完成的研发需求的数量，可以用于评估组织的研发需求执行能力和绩效。', '所有的研发需求个数求和\n关闭原因为已完成\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的未关闭研发需求数', 'count_of_unclosed_story', '个', '按全局统计的未关闭研发需求数表示尚未完成的研发需求的数量。该度量项反映了组织中尚未完成并关闭的研发需求的数量，可以用于评估组织的研发需求执行进展和挑战。', '复用：\n按全局统计的研发需求总数\n按全局统计的已关闭研发需求数\n公式：按全局统计的未关闭研发需求数=按全局统计的研发需求总数-按全局统计的已关闭研发需求数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的无效研发需求数', 'count_of_invalid_story', '个', '按全局统计的无效研发需求数是指被判定为无效的研发需求数量。无效需求可能包括重复需求、不可实现的需求、或者与产品策略和目标不符的需求。通过对无效需求的统计，可以帮助团队优化需求管理和筛选机制，以提高需求有效性和资源利用率。较高的无效需求数量可能需要对需求收集和评估流程进行改进。', '所有的研发需求个数求和\n关闭原因为重复、不做、设计如此和已取消\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的有效研发需求数', 'count_of_valid_story', '个', '按全局统计的有效研发需求数是指被确认为有效的研发需求数量。有效需求指的是符合产品策略和目标，可以实施并且对用户有价值的需求。通过对有效需求的统计，可以帮助团队评估产品需求的质量和重要性，并进行优先级排序和资源分配。较高的有效需求数量通常表示产品的功能和特性满足了用户和市场的期望，有利于实现产品的成功交付和用户满意度。', '复用：\n按全局统计的无效研发需求数\n按全局统计的研发需求总数\n公式：\n按全局统计的有效研发需求数=按全局统计的研发需求总数-按全局统计的无效研发需求数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的已交付研发需求数', 'count_of_delivered_story', '个', '按全局统计的已交付研发需求数表示已交付给用户的研发需求的数量。该度量项反映了组织中已经交付给用户的研发需求的数量，可以用于评估组织的研发需求交付能力和合作效果。', '所有的所处阶段为已发布或关闭原因为已完成的研发需求个数求和\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的年度新增研发需求数', 'count_of_annual_created_story', '个', '按全局统计的年度新增研发需求数表示每年新增加的研发需求的数量。该度量项反映了组织每年新增加的研发需求数量，可以用于评估组织的研发需求增长和规模扩展情况。', '所有的研发需求个数求和\n创建时间为某年\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的年度完成研发需求数', 'count_of_annual_finished_story', '个', '按全局统计的年度完成研发需求数表示每年完成的研发需求的数量。该度量项反映了组织每年完成的研发需求数量，可以用于评估组织的研发需求完成能力和绩效。', '所有的研发需求个数求和\n关闭时间为某年\n关闭原因为已完成\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的月度新增研发需求数', 'count_of_monthly_created_story', '个', '按全局统计的月度新增研发需求数表示每月新增加的研发需求的数量。该度量项反映了组织每月新增加的研发需求数量，可以用于评估组织的研发需求增长趋势和紧迫性。', '所有的研发需求个数求和\n创建时间为某年某月\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的月度完成研发需求数', 'count_of_monthly_finished_story', '个', '按全局统计的月度完成研发需求数表示每月完成的研发需求的数量。该度量项反映了组织每月完成的研发需求数量，可以用于评估组织的研发需求完成情况和效率。', '所有的研发需求个数求和\n关闭时间为某年某月\n关闭原因为已完成\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的年度交付研发需求数', 'count_of_annual_delivered_story', '个', '按全局统计的年度交付研发需求数表示每年交付的研发需求的数量。该度量项反映了组织每年交付给用户的研发需求数量，可以用于评估组织的研发需求交付效能和效果。', '所有的所处阶段为已发布且发布时间为某年或关闭原因为已完成且关闭时间为某年的研发需求个数求和\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的所有研发需求规模数', 'scale_of_story', '个', '按全局统计的所有研发需求规模数表示研发需求的规模总数。该度量项反映了组织研发需求的规模总数，可以用于评估组织的研发需求规模管理和成果。', '所有的研发需求规模数求和\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的已完成研发需求规模数', 'scale_of_finished_story', '个', '按全局统计的已完成研发需求规模数表示已经完成的研发需求的规模总数。该度量项反映了组织已经完成的研发需求的规模总数，可以用于评估组织的研发需求规模管理和成果。', '所有的研发需求规模数求和\n关闭原因为已完成\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的无效研发需求规模数', 'scale_of_invalid_story', '个', '按全局统计的无效研发需求数是指被判定为无效的研发需求数量。无效需求可能包括重复需求、不可实现的需求、或者与产品策略和目标不符的需求。通过对无效需求的统计，可以帮助团队优化需求管理和筛选机制，以提高需求有效性和资源利用率。较高的无效需求数量可能需要对需求收集和评估流程进行改进。', '所有的研发需求规模数求和\n关闭原因为重复、不做、设计如此和已取消\n过滤已删除的研发需求\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的有效研发需求规模数', 'scale_of_valid_story', '个', '按全局统计的有效研发需求数是指被确认为有效的研发需求数量。有效需求指的是符合产品策略和目标，可以实施并且对用户有价值的需求。通过对有效需求的统计，可以帮助团队评估产品需求的质量和重要性，并进行优先级排序和资源分配。较高的有效需求数量通常表示产品的功能和特性满足了用户和市场的期望，有利于实现产品的成功交付和用户满意度。', '复用：\n按全局统计的无效研发需求规模数\n按全局统计的研发需求规模数\n公式：\n按全局统计的有效研发需求数=按全局统计的研发需求规模数-按全局统计的无效研发需求规模数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的年度完成研发需求规模数', 'scale_of_annual_finished_story', '个', '按全局统计的年度完成研发需求规模数表示某年度完成的研发需求的规模总数。该度量项反映了组织每年完成的研发需求的规模总数，可以用于评估组织的研发需求规模管理和效果。', '所有的研发需求规模数求和\n关闭时间为某年\n关闭原因为已完成\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的年度交付研发需求规模数', 'scale_of_annual_delivered_story', '个', '按全局统计的年度交付研发需求规模数表示某年度交付的研发需求的规模总数。该度量项反映了组织每年交付给其他团队或部门的研发需求的规模总数，可以用于评估组织的研发需求交付管理和效果。', '所有的所处阶段为已发布且发布时间为某年或关闭原因为已完成且关闭时间为某年的研发需求规模数求和\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的年度关闭研发需求规模数', 'scale_of_annual_closed_story', '个', '按全局统计的年度关闭研发需求规模数表示某年度关闭的研发需求的规模总数。该度量项反映了组织每年关闭的研发需求的规模总数，可以用于评估组织的研发需求规模管理和调整情况。', '所有的研发需求规模数求和\n关闭时间为某年\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的月度完成研发需求规模数', 'scale_of_monthly_finished_story', '个', '按全局统计的月度完成研发需求规模数表示某月度完成的研发需求的规模总数。该度量项反映了组织每月完成的研发需求的规模总数，可以用于评估组织的研发需求规模管理和效果。', '所有的研发需求规模数求和\n关闭时间为某年某月\n关闭原因为已完成\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的月度交付研发需求规模数', 'scale_of_monthly_delivered_story', '个', '按全局统计的月度交付研发需求数表示某月度交付的研发需求的数量。该度量项反映了组织每月交付给用户的研发需求数量，可以用于评估组织的研发需求交付效能和效果。', '所有的所处阶段为已发布且发布时间为某年某月或关闭原因为已完成且关闭时间为某年某月的研发需求规模数求和\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'story', '按全局统计的月度关闭研发需求规模数', 'scale_of_monthly_closed_story', '个', '按全局统计的月度关闭研发需求规模数表示某月度关闭的研发需求的规模总数。该度量项反映了组织每月关闭的研发需求的规模总数，可以用于评估组织的研发需求规模管理和调整情况。', '所有的研发需求规模数求和\n关闭时间为某年某月\n过滤已删除的研发需求', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'global', 'story', '按全局统计的研发需求完成率', 'rate_of_finished_story', '%', '按全局统计的研发需求完成率表示按全局统计的已完成的研发需求数相对于按全局统计的有效研发需求数。这个指标反映了整体研发团队在完成研发需求方面的效率和质量。完成率越高，说明研发团队能够按时交付需求，并且需求达到预期的质量标准。', '复用：\n按全局统计的完成研发需求数\n按全局统计的有效研发需求数\n公式：\n按全局统计的研发需求完成率=按全局统计的已完成研发需求数/按全局统计的有效研发需求数*100%', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'global', 'story', '按全局统计的研发需求交付率', 'rate_of_delivered_story', '%', '按全局统计的研发需求交付率表示按全局统计的已交付的研发需求数相对于按全局统计的有效研发需求数。这个度量项衡量了研发团队按时交付需求的能力。交付率越高，代表研发团队能够按时将需求交付给其他团队，实现产品的正常发布。', '复用：\n按全局统计的已交付研发需求数\n按全局统计的有效研发需求数\n公式：\n按产品统计的研发需求完成率=按产品统计的已交付研发需求数/按产品统计的有效研发需求数*100%', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'global', 'story', '按全局统计的年度研发需求完成率', 'rate_of_annual_finished_story', '%', '按全局统计的研发需求完成率表示按全局统计的年度已完成的研发需求数相对于按全局统计的有效研发需求数。这个指标衡量了整体研发团队在完成年度研发需求方面的效率和质量。完成率越高，说明研发团队能够按时完成年度目标，并且需求达到预期的质量标准。', '复用：\n按全局统计的年度完成研发需求数\n按全局统计的年度有效研发需求数\n公式：\n按全局统计的年度研发需求完成率=按全局统计的年度完成研发需求数/按全局统计的年度有效研发需求数*100%', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'global', 'story', '按全局统计的年度研发需求交付率', 'rate_of_annual_delivered_story', '%', '按全局统计的研发需求交付率表示按全局统计的年度已交付的研发需求规模数相对于按全局统计的有效研发需求数。这个度量项衡量了研发团队按时交付年度需求的能力。交付率越高，代表研发团队能够按时将年度需求交付给其他团队，实现年度目标的实现。', '复用：\n按产品统计的年度交付研发需求数\n按产品统计的年度有效研发需求数\n公式：\n按产品统计的年度研发需求完成率=按产品统计的年度交付研发需求数/按产品统计的年度有效研发需求数*100%', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'feedback', '按全局统计的反馈总数', 'count_of_feedback', '个', '按全局统计的反馈总数是指收集到的所有用户反馈的数量。这个度量项可以帮助团队了解用户对产品的关注点和问题，并作为改进产品质量和用户满意度的依据。较高的反馈总数可能暗示着用户的活跃度和关注度较高，需要团队及时响应和处理，同时暗示产品问题可能有很多。', '所有的反馈个数求和\n过滤已删除的反馈\n过滤已删除的产品', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'feedback', '按全局统计的已关闭反馈数', 'count_of_closed_feedback', '个', '按全局统计的已关闭反馈数是指已经处理完毕并关闭的用户反馈的数量。这个度量项可以反映团队对用户反馈的关注度和处理效率。较高的已关闭反馈总数可能意味着团队能够及时响应用户反馈，并持续改进产品以解决用户问题。', '所有的反馈个数求和\n状态为已关闭\n过滤已删除的反馈', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'feedback', '按全局统计的年度新增反馈数', 'count_of_annual_created_feedback', '个', '按全局统计的年度新增反馈数是指在某年度收集到的用户反馈的数量。这个度量项可以帮助团队了解用户对产品的发展趋势和需求变化，并进行产品策略的调整和优化。较高的年度新增反馈数可能暗示着产品的用户基础扩大或者功能迭代带来了更多用户参与。', '所有的反馈个数求和\n创建时间为某年\n过滤已删除的反馈', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'feedback', '按全局统计的年度关闭反馈数', 'count_of_annual_closed_feedback', '个', '按全局统计的年度关闭反馈数是指在某年度处理并关闭的用户反馈的数量。这个度量项可以帮助团队评估在某年度对用户反馈的响应能力和问题解决能力。较高的年度关闭反馈数可能暗示着团队能够高效地解决用户反馈并持续改进产品，提升用户满意度和产品质量。', '所有的反馈个数求和\n关闭时间为某年\n过滤已删除的反馈', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的项目总数', 'count_of_project', '个', '按全局统计的项目总数是指目前系统内的总项目数量。这个度量项可以帮助团队了解当前的项目规模和工作量，并作为项目管理的基础数据之一。项目总数可以涉及不同状态的项目，包括未开始、进行中、已挂起和已关闭的项目。', '所有的项目个数求和\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的未开始项目数', 'count_of_wait_project', '个', '按全局统计的未开始项目数是指目前未启动的项目数量。这个度量项可以帮助团队了解当前需要启动的项目数量和工作规划。', '所有的项目个数求和\n状态为未开始\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的进行中项目数', 'count_of_doing_project', '个', '按全局统计的进行中项目数是指目前正在进行中的项目数量。这个度量项可以帮助团队了解当前正在进行的工作量和资源分配情况，以及项目的执行进度和效率。', '所有的项目个数求和\n状态为进行中\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的已挂起项目数', 'count_of_suspended_project', '个', '按全局统计的已挂起项目数是指因某种原因而暂停或停滞的项目数量。这个度量项可以帮助团队了解存在的挂起项目的数量和原因，并进行适当的调整和解决。', '所有的项目个数求和\n状态为已挂起\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的已关闭项目数', 'count_of_closed_project', '个', '按全局统计的已关闭项目数是指已经完成并关闭的项目数量。这个度量项可以帮助团队了解已经完成的项目数量和整体的项目执行情况。', '所有的项目个数求和\n状态为已关闭\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的未关闭项目数', 'count_of_unclosed_project', '个', '按全局统计的未关闭项目数是指在特定时间范围内未开始或仍然在进行中的项目数量。这个度量项可以衡量项目管理和执行的效率。', '复用：\n按全局统计的已关闭项目数\n按全局统计的项目总数\n公式：\n按全局统计的未关闭项目数=按全局统计的项目总数-按全局统计的已关闭项目数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的完成项目中按期完成项目数', 'count_of_undelayed_project', '个', '按全局统计的完成项目中按期关闭项目数是指按预定计划时间关闭的项目数量。这个度量项可以帮助团队评估项目的时间管理和执行能力。较高的按期关闭项目数表示团队能够按时交付项目，有助于保持项目进展和客户满意度。', '所有的项目个数求和\n状态为已关闭\n完成日期<=项目启动时的计划截止日期\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的完成项目中延期完成项目数', 'count_of_delayed_project', '个', '按全局统计的完成项目中延期完成项目数是指超过预定计划时间而关闭的项目数量。这个度量项可以帮助团队评估项目的时间管理和执行能力，并识别延期原因并采取适当措施。较高的延期完成项目数可能需要团队关注项目计划和资源安排的问题。', '所有的项目个数求和\n状态为已关闭\n完成日期>项目启动时的计划截止日期\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的年度新增项目数', 'count_of_annual_created_project', '个', '按全局统计的年度新增项目数是指某年度新启动的项目数量。这个度量项可以帮助团队了解某年度的项目规模和工作负荷，以及项目管理和资源分配的需求。较高的年度新增项目数可能需要团队根据资源和能力进行优先级和规划管理。', '所有的项目个数求和\n创建时间为某年\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的年度关闭项目数', 'count_of_annual_closed_project', '个', '按全局统计的年度关闭项目数是指在某年度完成并关闭的项目数量。这个度量项可以帮助团队了解某年度项目的执行情况和成果，并进行项目交付能力的评估。较高的年度关闭项目数表明团队在项目交付方面具有较高的效率。', '所有的项目个数求和\n关闭时间为某年\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的年度启动项目中按期完成项目数', 'count_of_undelayed_project_which_started', '个', '按全局统计的年度启动项目中按期完成项目数是指在某年度启动的项目中按预定计划时间关闭的项目数量。这个度量项可以帮助团队评估某年度项目的时间管理和执行能力，并衡量项目的进展和交付效果。较高的按时关闭项目数表明团队能够按时交付项目，有助于保持项目的正常进行和客户满意度。', '所有的项目个数求和\n启动时间为某年\n完成日期<=项目启动时的计划截止日期（根据历史记录推算）\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的年度完成项目中延期完成项目数', 'count_of_delayed_project_which_finished', '个', '按全局统计的年度完成项目中延期完成项目数是指在某年度完成的项目中按预定计划时间关闭的项目数量。这个度量项可以帮助团队评估某年度项目的时间管理和执行能力，并识别延期原因并采取适当措施。较高的延期关闭项目数可能需要团队关注项目计划和资源安排的问题。', '复用：\n按全局统计的年度关闭项目数\n按全局统计的每年完成项目中按期完成项目数\n公式：\n按全局统计的年度延期完成项目数=按全局统计的年度关闭项目数-按全局统计的每年完成项目中按期完成项目数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'global', 'project', '按全局统计的年度完成项目中项目的按期完成率', 'rate_of_undelayed_project_which_finished', '个', '按全局统计的年度完成项目中项目的按期完成率是指按全局统计的年度完成项目中按期完成项目数与关闭项目数之比。这个度量项可以帮助团队评估某年度项目按期关闭的能力和效果，并作为项目管理的绩效指标之一。较高的按期完成率表示团队能够按时完成项目，说明对项目管理和交付能力较高。', '复用：\n按全局统计的年度关闭项目数\n按全局统计的年度完成项目中项目的按期完成率\n公式：\n按全局统计的年度项目按期关闭率=按全局统计的年度按时关闭项目数/按全局统计的年度关闭项目数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('rate', 'global', 'project', '按全局统计的年度完成项目中项目的延期完成率', 'rate_of_delayed_project_which_finished', '个', '按全局统计的年度完成项目中项目的延期完成率是指按全局统计的年度完成项目中延期完成项目数与关闭项目数之比。这个度量项可以帮助团队评估某年度项目按期关闭的能力和效果，并作为项目管理的绩效指标之一。较高的延期完成率可能需要团队关注项目计划和资源安排的问题。', '复用：\n按全局统计的年度关闭项目数\n按全局统计的年度延期关闭项目数\n公式：\n按全局统计的年度项目延期关闭率=按全局统计的年度延期关闭项目数/按全局统计的年度关闭项目数', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的月度新增项目数', 'count_of_monthly_created_project', '个', '按全局统计的月度新增项目数是指在某月度新启动的项目数量。这个度量项可以帮助团队了解某年度项目规模和工作负荷，以及项目管理和资源分配的需求。较高的年度新增项目数可能需要团队根据资源和能力进行优先级和规划管理。', '所有的项目个数求和\n创建时间为某年某月\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('scale', 'global', 'project', '按全局统计的月度关闭项目数', 'count_of_monthly_closed_project', '个', '按全局统计的年度关闭项目数是指在某月度关闭的项目数量。这个度量项可以帮助团队了解某年度项目的执行情况和成果，并进行项目交付能力的评估。较高的年度关闭项目数表明团队在项目交付方面具有较高的效率。', '所有的项目个数求和\n关闭时间为某年某月\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('hour', 'global', 'project', '按全局统计的年度关闭项目的任务预计工时数', 'estimate_of_annual_closed_project', '个', '按全局统计的年度关闭项目的任务预计工时数是指团队或组织在某年度预计需要花费的总工时数。该度量项可以用来评估团队或组织在任务完成方面的工时规划和估算准确性。较准确的年度完成任务预计工时数可以帮助团队更好地安排资源和时间，提高任务的完成效率和进度控制。', '所有项目任务的预计工时数求和\n项目状态为已关闭\n关闭时间为某年\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('hour', 'global', 'project', '按全局统计的年度关闭项目的任务消耗工时数', 'consume_of_annual_closed_project', 'h', '按全局统计的年度关闭项目的任务消耗工时数是指在某年度关闭的项目中团队或组织实际花费的总工时数，用于完成任务。该度量项可以用来评估团队或组织在任务执行过程中的工时投入情况和对资源的利用效率。较高的年度关闭项目的任务消耗工时数可能需要审查工作流程和资源分配，以提高工作效率和进度控制。', '所有项目任务的消耗工时数求和\n项目状态为已关闭\n关闭时间为某年\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('hour', 'global', 'project', '按全局统计的月度关闭项目的任务消耗工时数', 'consume_of_monthly_closed_project', 'h', '按全局统计的月度关闭项目的任务消耗工时数是指团队或组织在某月内预计需要花费的总工时数，用于完成任务。该度量项可以用来评估团队或组织在任务执行过程中的工时投入情况和对资源的利用效率。较高的月度关闭项目的任务消耗工时数可能需要审查工作流程和资源分配，以提高工作效率和进度控制。', '所有项目任务消耗工时数求和\n项目状态为已关闭\n关闭时间为某年某月\n过滤已删除的项目', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');
INSERT INTO `zt_metric`(`purpose`, `scope`, `object`, `name`, `code`, `unit`, `desc`, `definition`, `when`, `event`, `cronCFG`, `time`, `createdBy`, `createdDate`, `editedBy`, `editedDate`, `order`, `deleted`) VALUES ('hour', 'global', 'project', '按全局统计的年度已关闭项目投入总人天', 'hour_of_annual_closed_project', '人天', '按全局统计的年度关闭项目投入总人天是指在某年度关闭项目的团队总共投入的工作天数。该度量项可以用来评估项目的人力资源投入情况。投入总人天的增加可能意味着项目投入的工作时间和资源的增加。', '复用：\n按全局统计的年度关闭项目消耗工时数\n公式：\n按全局统计的年度关闭项目投入总人天=按全局统计的年度已关闭项目任务的消耗工时数/后台配置的每天可用工时', 'realtime', '', '', '', '', NULL, '', NULL, '0', '0');

ALTER TABLE `zt_story` ADD `releasedDate` datetime DEFAULT NULL AFTER `reviewedDate`;
ALTER TABLE `zt_project` ADD `firstEnd` date DEFAULT NULL AFTER `end`;
ALTER TABLE `zt_product` ADD `closedDate` date DEFAULT NULL AFTER `createdVersion`;
ALTER TABLE `zt_productplan` ADD `finishedDate` datetime DEFAULT NULL AFTER `end`;
ALTER TABLE `zt_productplan` ADD `closedDate` datetime DEFAULT NULL AFTER `end`;
