{"version":3,"names":["TiptapEditorFooter","render","charCount","this","editor","storage","characterCount","characters","h","Fragment","showCharCount","toggleFullscreen","id","onClick"],"sources":["./src/components/tiptap-editor-footer/tiptap-editor-footer.tsx"],"sourcesContent":["import { Component, Prop, Fragment, h } from '@stencil/core';\nimport { Editor } from '../../editor';\n\n@Component({\n  tag: 'tiptap-editor-footer',\n})\nexport class TiptapEditorFooter {\n  /**\n   * Tiptap editor instance.\n   */\n  @Prop() editor: Editor;\n\n  /**\n   * Force update counter.\n   */\n  @Prop() forceUpdateCounter: number;\n\n  /**\n   * Toggle fullscreen callback.\n   */\n  @Prop() toggleFullscreen: (event: MouseEvent) => void = null;\n\n  /**\n   * Show character count.\n   */\n  @Prop() showCharCount = true;\n\n  render() {\n    const charCount = this.editor.storage.characterCount.characters();\n    return (\n      <Fragment>\n        {this.showCharCount ? (\n          <span>\n            {charCount} character{charCount > 1 ? 's' : ''}.\n          </span>\n        ) : (\n          <div />\n        )}\n        {this.toggleFullscreen && (\n          <button id=\"fullscreen-button\" onClick={this.toggleFullscreen}>\n            Toggle Fullscreen\n          </button>\n        )}\n      </Fragment>\n    );\n  }\n}\n"],"mappings":"wDAMaA,EAAkB,M,uGAc2B,K,mBAKhC,I,CAExBC,SACE,MAAMC,EAAYC,KAAKC,OAAOC,QAAQC,eAAeC,aACrD,OACEC,EAACC,EAAQ,KACNN,KAAKO,cACJF,EAAA,YACGN,EAAS,aAAYA,EAAY,EAAI,IAAM,GAAE,KAGhDM,EAAA,YAEDL,KAAKQ,kBACJH,EAAA,UAAQI,GAAG,oBAAoBC,QAASV,KAAKQ,kBAAgB,qB"}